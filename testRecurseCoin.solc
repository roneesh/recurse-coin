contract TestRecurseCoin { mapping (address => uint256) public balanceOf; string public name; string public symbol; uint8 public decimals; function TestRecurseCoin(uint256 initialSupply, string tokenName, uint8 decimalUnits, string tokenSymbol) { balanceOf[msg.sender] = initialSupply; name = tokenName; symbol = tokenSymbol; decimals = decimalUnits; } function transfer(address _to, uint256 _value) { if (balanceOf[msg.sender] < _value || balanceOf[_to] + _value < balanceOf[_to]) throw; balanceOf[msg.sender] -= _value; balanceOf[_to] += _value; Transfer(msg.sender, _to, _value); } event Transfer(address indexed from, address indexed to, uint256 value); }